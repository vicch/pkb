#+setupfile: ../../styles/readtheorg.setup
#+title: Cloud Native Go: Building Web Applications and Microservices for the Cloud with Go and React

* The Way of the Cloud
** The Virtues of the Way of the Cloud
*** Favor Simplicity

Question everything that appears to defy simplicity.

Tools must never be mandatory. If a specific IDE has to be used because the code will not generate or compile without it, then you are not favoring simplicity. Anything that can be done from the command line can be automated by a script or a continuous delivery tool.

*** Test First, Test Everything

Testing is the first and best defense against the evils of hope-based computing.

What you’re building isn’t just a piece of software being deployed on a computer sitting a few feet away. Imagine that what you’re building is a spacecraft, being launched into deep space. Once launched, you can’t touch it, just like when you deploy to the cloud, you are relinquishing a lot of hands-on control. If something fails catastrophically a few million miles from home, that’s the end of the line.

*** Release Early, Release Often

#+begin_quote
There are organizations where it is the norm for a release to be a stop-the-world event. It is planned months in advance, emergency personnel are on standby, ambulances and firefighters are in position, and nearly every person who ever checked in a line of code, or oversaw the checkins, is on the phone at midnight in order to carry out this release. The Guinness Book of World Records is on the phone so they can be there to record the event just in case, for the first time in history, nothing goes wrong.
#+end_quote

*** Automate Everything

Things that are done manually are error-prone.

*** Build Service Ecosystems

An application is just a microservice that exposes one or more endpoints that render a GUI, e.g. HTML.

* Go Primer

Go is not an object-oriented programming language. There are no classes in Go, just functions.

** Using Basic Functions


* 链接

1. [[https://12factor.net][The Twelve-Factor App]]

#+setupfile: ../../styles/readtheorg.setup
#+title: PlantUML

* Global
** Base

#+begin_src text
@startuml
// Params
// UMLs
@enduml
#+end_src

** Comment

#+begin_src text
' Single-line comment

/'
  Block comment
'/
#+end_src

** Annotations
*** Syntax

#+begin_src text
title|caption <Text>
title|caption
    <Text>
    <Text>
endtitle|endcaption

legend [left|right|center]
    <Text>
    <Text>
endlegend

[left|right|center] header|footer <Text>
[left|right|center] header|footer
    <Text>
    <Text>
endheader|endfooter
#+end_src

*** Example

#+begin_src plantuml :file ../images/plantuml/annotations.png :exports none
@startuml
!include ../../styles/plantuml-style

title This Is Title
caption This is caption
legend
  This is
  legend
endlegend
right header This is header
left footer
  This is
  footer
endfooter

(Node A) -> (Node B)
@enduml
#+end_src

file:../images/plantuml/annotations.png

#+begin_src text
title This Is Title
caption This is caption
legend
  This is
  legend
endlegend
right header This is header
left footer
  This is
  footer
endfooter

(Node A) -> (Node B)
#+end_src

** =note=
*** Syntax

#+begin_src text
// Directly below an entity
<style> note <side> : <text>

<style>
    floating // Available in activity diagram
#+end_src

*** Example

#+begin_src plantuml :file ../images/plantuml/02.png :exports none
!include ../../styles/plantuml-style

(Node A)
note left : This is a node

(Node B)
note right : This is another node
#+end_src

file:../images/plantuml/02.png

#+begin_src text
(Node A)
note left : This is a node

(Node B)
note right : This is another node
#+end_src

* Sequence
** Participants
*** Syntax

#+begin_src text
<type> <name> <options>

<name>
    // Single word doesn't need ""
    // Multiple words, or name containing non-letter characters need to be wrapped in ""
    // Insert line breaks with "\n"

<options>
    as <alias>
    <bg_color>
        <color_name> // E.g. #red
        <color_hex>  // E.g. #FFFFFF
    order <int>      // Custom order, otherwise sorted by declaration order

<type>
    participant // Default type, can be skipped
    actor
    boundary
    control
    entity
    database
    collections
#+end_src

*** Example

#+begin_src plantuml :file ../images/plantuml/03.png :exports none
!include ../../styles/plantuml-style

participant A
participant "Participant with\nlong name" as B
actor Actor #red
boundary Boundary #FFFFFF
control Control
entity Entity
database Database
collections Collections
#+end_src

file:../images/plantuml/03.png

#+begin_src text
participant A
participant "Participant with\nlong name" as B
actor Actor #red
boundary Boundary #FFFFFF
control Control
entity Entity
database Database
collections Collections
#+end_src

** Messages
*** Syntax

#+begin_src text
<name>|<alias> <arrow> <name>|<alias> : <message>

<name>|<alias>
    // Can be the same participant, to send message to itself

<arrow>
    <line>
        -      // Solid line
        --     // Dotted line
    <head>
        left right
        <    >     // Normal
        <<   >>    // Thin
        /    \     // Upper half
        \    /     // Lower half
        //   \\    // Thin upper half
        \\   //    // Thin lower half
        x<   >x    // Change arrow to cross (lost message)
        o<   >o    // Add circle, can combine with other styles
    <direction>
        -> etc.  // Unidirection
        <-> etc. // Bidirection

<message>
    // Insert line breaks with "\n"
#+end_src

*** Example 1

#+begin_src plantuml :file ../images/plantuml/04.png :exports none
!include ../../styles/plantuml-style

actor User
participant Service

User -> User : Message\nto self
User -> Service : Message to other participant
User <- Service
User --> Service
User <-- Service
#+end_src 

file:../images/plantuml/04.png

#+begin_src text
actor User
participant Service

User -> User : Message\nto self
User -> Service : Message to other participant
User <- Service
User --> Service
User <-- Service
#+end_src

*** Example 2

#+begin_src plantuml :file ../images/plantuml/05.png :exports none
!include ../../styles/plantuml-style

participant "Participant A" as A
participant "Participant B" as B

A -> B
A ->> B
A -\ B
A -/ B
A -\\ B
A -// B
A ->x B
A ->>o B
A o//-//x B
#+end_src

file:../images/plantuml/05.png

#+begin_src text
participant "Participant A" as A
participant "Participant B" as B

A -> B
A ->> B
A -\ B
A -/ B
A -\\ B
A -// B
A ->x B
A ->>o B
A o//-//x B
#+end_src

* Mind Map
** Syntax

#+begin_src text
@startmindmap
+ <Root>
++ <Text>   // Each level indents 1 char
++ <Text>   // Branch to right
-- <Text>   // Branch to left
---_ <Text> // Boxless
@endmindmap
#+end_src

*** Example

#+begin_src plantuml :file ../images/plantuml/07.png :exports none
@startmindmap
!include ../../styles/plantuml-style

+ OS
++ Ubuntu
+++_ Kubuntu
+++_ Lubuntu
+++_ KDE Neon
+++_ Linux Mint
++ LMDE
++ SolydXK
++ SteamOS
++ Raspbian
-- Win 95
-- Win 98
-- Win NT
---_ Win 8
---_ Win 10
@endmindmap
#+end_src

file:../images/plantuml/07.png

#+begin_src text
+ OS
++ Ubuntu
+++_ Kubuntu
+++_ Lubuntu
+++_ KDE Neon
+++_ Linux Mint
++ LMDE
++ SolydXK
++ SteamOS
++ Raspbian
-- Win 95
-- Win 98
-- Win NT
---_ Win 8
---_ Win 10
#+end_src

* Work Breakdown Structure
** Syntax

#+begin_src text
+ <Root>
 + <Text>   // Each level indents 1 space
  + <Text>  // Branch to right
  - <Text>  // Branch to left
 + <Text>
  +_ <Text> // Branch to right, boxless
  -_ <Text> // Branch to left, boxless
#+end_src

** Example

#+begin_src plantuml :file ../images/plantuml/06.png :exports none
@startwbs
!include ../../styles/plantuml-style

+ Project
 + Part One
  + Task 1.1
   - Task 1.2
   + Task 1.3
  + Part Two
   + Task 2.1
   + Task 2.2
   -_ Task 2.2.1 To the left, boxless
   -_ Task 2.2.2 To the left, boxless
   +_ Task 2.2.3 To the right, boxless
 + Part Three
@endwbs
#+end_src

file:../images/plantuml/06.png

#+begin_src text
@startwbs
+ Project
 + Part One
  + Task 1.1
   - Task 1.2
   + Task 1.3
  + Part Two
   + Task 2.1
   + Task 2.2
   -_ Task 2.2.1 To the left, boxless
   -_ Task 2.2.2 To the left, boxless
   +_ Task 2.2.3 To the right, boxless
 + Part Three
@endwbs
#+end_src

* Graphviz DOT
** Syntax

#+begin_src text
@startdot
diagraph <Name> {
    ...
}
@enddot
#+end_src

* Params

#+begin_src text
skinparam defaultFontName "<Font Name>"
skinparam defaultFontSize <int>
skinparam monochrome <bool>
skinparam shadowing <bool>
#+end_src

* Install

#+begin_src sh
brew install graphviz
brew install plantuml
#+end_src

* Links

- [[https://plantuml.com][PlantUML]]
- [[https://github.com/plantuml/plantuml][GitHub | PlantUML]]
- [[http://wiki.plantuml.net/site/index][PlantUML in A Nutshell]]
- [[https://plantuml-documentation.readthedocs.io/en/latest/formatting/all-skin-params.html][PlantUML All Skin Parameters]]
- [[https://github.com/yfuruyama/real-world-plantuml][Real World PlantUML]]
- [[https://graphviz.gitlab.io/documentation][Graphviz | Documentation]]

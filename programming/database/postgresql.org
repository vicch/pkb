#+setupfile: ../../styles/readtheorg.setup
#+title: PostgreSQL

* 类型
** 字符串

字符串使用单引号，转义字符串中的单引号使用双单引号：@@html:<code>''</code>@@ 。 

** 日期时间

#+caption: 按格式输出
#+begin_src sql
SELECT to_char(<column>, '<format>') FROM ...;

# 示例
SELECT to_char(insert_time, 'YYYY-MM-DD HH24:MI:SS') FROM ...;
#+end_src

[[http://www.postgresql.org/docs/9.1/static/functions-formatting.html][Data Type Formatting Functions]]
* 命令行
** =psql=

#+begin_src sh
psql <options>

<options> # 连接
    -h <host>     # 默认为 127.0.0.1
    -p <port>     # 默认为 5432
    -U <user>     # 默认为当前系统用户名
    -d <database> # 默认为当前系统用户名

<options> # 输入
    -c <cmd>  # 执行命令
    -f <file> # 执行文件内的命令

<options> # 输出
    -o, --output= <file>   # 结果输出到文件
    -L, --log-file= <file> # 

<options> # 输出格式
    -F, --field-separator= <string>  # 列分隔符，eg. -F $'\t'
    -R, --record-separator= <string> # 行分隔符
    -A, --no-align                   # 不强制对齐列
    -t, --tuples-only                # 不输出列名和 footer
    -P, --pset= <name>=<value>
        footer
#+end_src

** =pg_dump=

#+begin_src sh
pg_dump <options> <database> > <file>

<options> # 连接
    -h <host>
    -p <port>
    -U <user>

<options> # 输出
    -a, --data-only
    -s, --schema-only
    -n, --schema=<schema> # Dump the names schema only
#+end_src

#+caption: 恢复备份
#+begin_src sh
psql <options> <database> < <file>

<options> # 连接
    -h <host>
    -p <port>
    -U <user>
#+end_src

* 控制台

|        |                 |                                  | SQL               |
|--------+-----------------+----------------------------------+-------------------|
| *信息* | =\l=            | 列出所有数据库                   | =SHOW DATABASES;= |
|--------+-----------------+----------------------------------+-------------------|
|        | =\d=            | 列出当前数据库所有内容           |                   |
|--------+-----------------+----------------------------------+-------------------|
|        | =\dt=           | 列出当前数据库所有表             | =SHOW TABLES;=    |
|--------+-----------------+----------------------------------+-------------------|
|        | =\d <table>=    | 显示表信息                       | =DESC <table>;=   |
|        | =\d+ <table>=   |                                  |                   |
|--------+-----------------+----------------------------------+-------------------|
|        | =\du=           | 列出所有用户                     |                   |
|--------+-----------------+----------------------------------+-------------------|
|        | =\conninfo=     | 显示当前连接信息                 |                   |
|--------+-----------------+----------------------------------+-------------------|
| *输出* | =\o <file>=     | 将之后命令行的结果输出到文件     |                   |
|--------+-----------------+----------------------------------+-------------------|
|        | =\x on=         | 扩展显示模式（数据表列按行输出） |                   |
|--------+-----------------+----------------------------------+-------------------|
|        | =\c <database>= | 连接其他数据库                   |                   |
|--------+-----------------+----------------------------------+-------------------|
| *其他* | =\h <command>=  | 查看 SQL 命令解释                |                   |
|--------+-----------------+----------------------------------+-------------------|
|        | =\?=            | 查看 =psql= 命令列表             |                   |
|--------+-----------------+----------------------------------+-------------------|
|        | =\q=            | 退出                             |                   |

* 安装
** 程序

#+caption: 安装客户端
#+begin_src sh
$ sudo apt-get install postgresql-client
#+end_src

#+caption: 安装服务器
#+begin_src sh
$ sudo apt-get install postgresql
#+end_src

正常情况下，安装完成后，PostgreSQL 服务器会自动在本机的 5432 端口开启。

#+caption: 安装图形管理界面
#+begin_src sh
$ sudo apt-get install pgadmin3
#+end_src

** 初始化

初次安装后默认生成：

- 名为 =postgres= 的数据库
- 名为 =postgres= 的数据库用户
- 名为 =postgres= 的系统用户

使用 =postgres= 用户来生成其他用户和新数据库。

*** 使用控制台

#+caption: 新建系统用户 =dbuser=
#+begin_src sh
$ sudo adduser dbuser
#+end_src

#+caption: 切换到 =postgres= 用户，以同名数据库用户身份登录控制台
#+begin_src sh
$ sudo su - postgres
$ psql
#+end_src

#+caption: 为 =postgres= 用户设置密码
#+begin_src sh
> \password postgres
#+end_src

#+caption: 新建数据库用户 =dbuser= 并设置密码
#+begin_src sh
> CREATE USER dbuser WITH PASSWORD 'password';
#+end_src

#+caption: 新建数据库并指定所有者为 =dbuser= ，并赋予所有权限
#+begin_src sh
> CREATE DATABASE exampledb OWNER dbuser;
> GRANT ALL PRIVILEGES ON DATABASE exampledb TO dbuser;
#+end_src

*** 使用 shell 命令

#+caption: 新建数据库用户 =dbuser= ，并指定为超级用户
#+begin_src sh
$ sudo -u postgres createuser --superuser dbuser
#+end_src

#+caption: 登录控制台，设置 =dbuser= 密码
#+begin_src sh
$ sudo -u postgres psql
> \password dbuser
#+end_src

#+caption: 新建数据库，并指定所有者为 =dbuser=
#+begin_src sh
$ sudo -u postgres createdb -O dbuser exampledb
#+end_src

* Debug

#+caption: 查看并解除锁
#+begin_src sql
SELECT
t.schemaname,
t.relname,
l.locktype,
l.page,
l.virtualtransaction,
l.pid,
l.mode,
l.granted
FROM pg_locks l
JOIN pg_stat_all_tables t ON l.relation = t.relid
WHERE t.schemaname <> 'pg_toast'::name AND t.schemaname <> 'pg_catalog'::name
ORDER BY t.schemaname, t.relname;

SELECT pg_cancel_backend('<pid>');
#+end_src

* 加密

1. [[https://www.postgresql.org/docs/current/static/pgcrypto.html][pgcrypto]]
